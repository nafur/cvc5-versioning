on: [push, pull_request]
name: CI

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: ubuntu:production
            os: ubuntu-latest
            config: production --auto-download --all-bindings --editline --docs
            cache-key: production
            strip-bin: strip
            python-bindings: true
            build-documentation: true
            check-examples: true
            store-to-release-name: cvc5-Linux
            exclude_regress: 3-4
            run_regression_args: --tester base --tester model --tester synth --tester abduct --tester dump

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    # cancel already running jobs for the same branch/pr/tag
    concurrency:
      group: build-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: true

    steps:

    - uses: actions/checkout@v2

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        with-documentation: ${{ matrix.build-documentation }}
        with-python-bindings: ${{ matrix.python-bindings }}
        windows-build: ${{ matrix.windows-build }}

    - name: Setup caches
      uses: ./.github/actions/setup-cache
      with:
        cache-key: ${{ matrix.cache-key }}

    - name: Configure and build
      id: configure-and-build
      uses: ./.github/actions/configure-and-build
      with:
        configure-env: ${{ matrix.env }}
        configure-config: ${{ matrix.config }}
        build-shared: ${{ matrix.build-shared }}
        build-static: ${{ matrix.build-static }}
        strip-bin: ${{ matrix.strip-bin }}

    - name: ccache Statistics
      run: ccache -s

    - name: Add binary to release
      if: matrix.store-to-release-binary && startsWith(github.ref, 'refs/tags/')
      uses: ./.github/actions/add-to-release
      with:
        binary: ${{ steps.configure-and-build.outputs.static-build-dir }}/bin/cvc5${{ matrix.binary-ext }}
        release-name: ${{ matrix.store-to-release-name }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Add binary to latest
      if: matrix.store-to-release-binary
      uses: ./.github/actions/add-to-release
      with:
        binary: ${{ steps.configure-and-build.outputs.static-build-dir }}/bin/cvc5${{ matrix.binary-ext }}
        release-name: ${{ matrix.store-to-release-name }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        store-to-latest: true

  update-pr:
    runs-on: ubuntu-latest
    if: github.repository == 'cvc5/cvc5' && github.event_name == 'push'
    needs: build
    steps:
      - name: Automatically update PR
        uses: adRise/update-pr-branch@v0.5.1
        with:
          token: ${{ secrets.ACTION_USER_TOKEN }}
          base: 'master'
          required_approval_count: 1
